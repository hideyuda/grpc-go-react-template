/**
 * @fileoverview gRPC-Web generated client stub for review
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.6
// source: review.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as review_pb from './review_pb';


export class ReviewServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/Create',
    grpcWeb.MethodType.UNARY,
    review_pb.Review,
    review_pb.Review,
    (request: review_pb.Review) => {
      return request.serializeBinary();
    },
    review_pb.Review.deserializeBinary
  );

  create(
    request: review_pb.Review,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.Review>;

  create(
    request: review_pb.Review,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.Review) => void): grpcWeb.ClientReadableStream<review_pb.Review>;

  create(
    request: review_pb.Review,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.Review) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/Update',
    grpcWeb.MethodType.UNARY,
    review_pb.Review,
    review_pb.ReviewBoolResponse,
    (request: review_pb.Review) => {
      return request.serializeBinary();
    },
    review_pb.ReviewBoolResponse.deserializeBinary
  );

  update(
    request: review_pb.Review,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.ReviewBoolResponse>;

  update(
    request: review_pb.Review,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.ReviewBoolResponse) => void): grpcWeb.ClientReadableStream<review_pb.ReviewBoolResponse>;

  update(
    request: review_pb.Review,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.ReviewBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/Delete',
    grpcWeb.MethodType.UNARY,
    review_pb.ReviewIdRequest,
    review_pb.ReviewBoolResponse,
    (request: review_pb.ReviewIdRequest) => {
      return request.serializeBinary();
    },
    review_pb.ReviewBoolResponse.deserializeBinary
  );

  delete(
    request: review_pb.ReviewIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.ReviewBoolResponse>;

  delete(
    request: review_pb.ReviewIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.ReviewBoolResponse) => void): grpcWeb.ClientReadableStream<review_pb.ReviewBoolResponse>;

  delete(
    request: review_pb.ReviewIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.ReviewBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/GetById',
    grpcWeb.MethodType.UNARY,
    review_pb.ReviewIdRequest,
    review_pb.Review,
    (request: review_pb.ReviewIdRequest) => {
      return request.serializeBinary();
    },
    review_pb.Review.deserializeBinary
  );

  getById(
    request: review_pb.ReviewIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.Review>;

  getById(
    request: review_pb.ReviewIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.Review) => void): grpcWeb.ClientReadableStream<review_pb.Review>;

  getById(
    request: review_pb.ReviewIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.Review) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetListByUser = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/GetListByUser',
    grpcWeb.MethodType.UNARY,
    review_pb.ReviewUserIdRequest,
    review_pb.ReviewList,
    (request: review_pb.ReviewUserIdRequest) => {
      return request.serializeBinary();
    },
    review_pb.ReviewList.deserializeBinary
  );

  getListByUser(
    request: review_pb.ReviewUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.ReviewList>;

  getListByUser(
    request: review_pb.ReviewUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void): grpcWeb.ClientReadableStream<review_pb.ReviewList>;

  getListByUser(
    request: review_pb.ReviewUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/GetListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/GetListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetListByUser);
  }

  methodDescriptorGetListByContent = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/GetListByContent',
    grpcWeb.MethodType.UNARY,
    review_pb.ReviewContentIdRequest,
    review_pb.ReviewList,
    (request: review_pb.ReviewContentIdRequest) => {
      return request.serializeBinary();
    },
    review_pb.ReviewList.deserializeBinary
  );

  getListByContent(
    request: review_pb.ReviewContentIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.ReviewList>;

  getListByContent(
    request: review_pb.ReviewContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void): grpcWeb.ClientReadableStream<review_pb.ReviewList>;

  getListByContent(
    request: review_pb.ReviewContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/GetListByContent',
        request,
        metadata || {},
        this.methodDescriptorGetListByContent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/GetListByContent',
    request,
    metadata || {},
    this.methodDescriptorGetListByContent);
  }

  methodDescriptorGetListByIdList = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/GetListByIdList',
    grpcWeb.MethodType.UNARY,
    review_pb.ReviewIdListRequest,
    review_pb.ReviewList,
    (request: review_pb.ReviewIdListRequest) => {
      return request.serializeBinary();
    },
    review_pb.ReviewList.deserializeBinary
  );

  getListByIdList(
    request: review_pb.ReviewIdListRequest,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.ReviewList>;

  getListByIdList(
    request: review_pb.ReviewIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void): grpcWeb.ClientReadableStream<review_pb.ReviewList>;

  getListByIdList(
    request: review_pb.ReviewIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/GetListByIdList',
        request,
        metadata || {},
        this.methodDescriptorGetListByIdList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/GetListByIdList',
    request,
    metadata || {},
    this.methodDescriptorGetListByIdList);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/review.ReviewService/GetAll',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    review_pb.ReviewList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    review_pb.ReviewList.deserializeBinary
  );

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<review_pb.ReviewList>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void): grpcWeb.ClientReadableStream<review_pb.ReviewList>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: review_pb.ReviewList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/review.ReviewService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/review.ReviewService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

}


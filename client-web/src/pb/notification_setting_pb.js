// source: notification_setting.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.notification_setting.NotificationSetting', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingBoolResponse', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingContentIdRequest', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingIdListRequest', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingIdRequest', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingList', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingUserIdAndContentIdRequest', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingUserIdRequest', null, global);
goog.exportSymbol('proto.notification_setting.NotificationSettingUuidRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSetting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification_setting.NotificationSetting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSetting.displayName = 'proto.notification_setting.NotificationSetting';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.notification_setting.NotificationSettingList.repeatedFields_, null);
};
goog.inherits(proto.notification_setting.NotificationSettingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingList.displayName = 'proto.notification_setting.NotificationSettingList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification_setting.NotificationSettingIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingIdRequest.displayName = 'proto.notification_setting.NotificationSettingIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingIdListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.notification_setting.NotificationSettingIdListRequest.repeatedFields_, null);
};
goog.inherits(proto.notification_setting.NotificationSettingIdListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingIdListRequest.displayName = 'proto.notification_setting.NotificationSettingIdListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingUserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification_setting.NotificationSettingUserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingUserIdRequest.displayName = 'proto.notification_setting.NotificationSettingUserIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingContentIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification_setting.NotificationSettingContentIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingContentIdRequest.displayName = 'proto.notification_setting.NotificationSettingContentIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingUuidRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification_setting.NotificationSettingUuidRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingUuidRequest.displayName = 'proto.notification_setting.NotificationSettingUuidRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification_setting.NotificationSettingUserIdAndContentIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.displayName = 'proto.notification_setting.NotificationSettingUserIdAndContentIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification_setting.NotificationSettingBoolResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification_setting.NotificationSettingBoolResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification_setting.NotificationSettingBoolResponse.displayName = 'proto.notification_setting.NotificationSettingBoolResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSetting.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSetting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSetting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSetting.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    followed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    liked: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    commented: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    chated: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    likingContentDiscounted: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    likingContentCommented: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    followingUserNew: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    news: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    event: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    coupon: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    update: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    emailFollowed: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    emailLiked: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    emailCommented: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    emailChated: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    emailLikingContentDiscounted: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    emailLikingContentCommented: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    emailFollowingUserNew: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    emailNews: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    emailEvent: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    emailCoupon: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    emailUpdate: jspb.Message.getBooleanFieldWithDefault(msg, 27, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSetting}
 */
proto.notification_setting.NotificationSetting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSetting;
  return proto.notification_setting.NotificationSetting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSetting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSetting}
 */
proto.notification_setting.NotificationSetting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFollowed(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLiked(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCommented(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChated(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLikingContentDiscounted(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLikingContentCommented(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFollowingUserNew(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNews(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEvent(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoupon(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdate(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailFollowed(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailLiked(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailCommented(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailChated(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailLikingContentDiscounted(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailLikingContentCommented(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailFollowingUserNew(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailNews(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailEvent(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailCoupon(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSetting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSetting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSetting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSetting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFollowed();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getLiked();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getCommented();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getChated();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getLikingContentDiscounted();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getLikingContentCommented();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getFollowingUserNew();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getNews();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getEvent();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getCoupon();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getUpdate();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getEmailFollowed();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getEmailLiked();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getEmailCommented();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getEmailChated();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getEmailLikingContentDiscounted();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getEmailLikingContentCommented();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getEmailFollowingUserNew();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getEmailNews();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getEmailEvent();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getEmailCoupon();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getEmailUpdate();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.notification_setting.NotificationSetting.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.notification_setting.NotificationSetting.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 user_id = 3;
 * @return {number}
 */
proto.notification_setting.NotificationSetting.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string created_at = 4;
 * @return {string}
 */
proto.notification_setting.NotificationSetting.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_at = 5;
 * @return {string}
 */
proto.notification_setting.NotificationSetting.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool followed = 6;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getFollowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setFollowed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool liked = 7;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getLiked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setLiked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool commented = 8;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getCommented = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setCommented = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool chated = 9;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getChated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setChated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool liking_content_discounted = 10;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getLikingContentDiscounted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setLikingContentDiscounted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool liking_content_commented = 11;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getLikingContentCommented = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setLikingContentCommented = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool following_user_new = 12;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getFollowingUserNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setFollowingUserNew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool news = 13;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getNews = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setNews = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool event = 14;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEvent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEvent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool coupon = 15;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getCoupon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setCoupon = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool update = 16;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setUpdate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool email_followed = 17;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailFollowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailFollowed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool email_liked = 18;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailLiked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailLiked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool email_commented = 19;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailCommented = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailCommented = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool email_chated = 20;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailChated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailChated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool email_liking_content_discounted = 21;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailLikingContentDiscounted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailLikingContentDiscounted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool email_liking_content_commented = 22;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailLikingContentCommented = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailLikingContentCommented = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool email_following_user_new = 23;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailFollowingUserNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailFollowingUserNew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool email_news = 24;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailNews = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailNews = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool email_event = 25;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailEvent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailEvent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool email_coupon = 26;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailCoupon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailCoupon = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool email_update = 27;
 * @return {boolean}
 */
proto.notification_setting.NotificationSetting.prototype.getEmailUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSetting} returns this
 */
proto.notification_setting.NotificationSetting.prototype.setEmailUpdate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.notification_setting.NotificationSettingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingList.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingList.toObject = function(includeInstance, msg) {
  var f, obj = {
    notificationList: jspb.Message.toObjectList(msg.getNotificationList(),
    proto.notification_setting.NotificationSetting.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingList}
 */
proto.notification_setting.NotificationSettingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingList;
  return proto.notification_setting.NotificationSettingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingList}
 */
proto.notification_setting.NotificationSettingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.notification_setting.NotificationSetting;
      reader.readMessage(value,proto.notification_setting.NotificationSetting.deserializeBinaryFromReader);
      msg.addNotification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotificationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.notification_setting.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NotificationSetting notification = 1;
 * @return {!Array<!proto.notification_setting.NotificationSetting>}
 */
proto.notification_setting.NotificationSettingList.prototype.getNotificationList = function() {
  return /** @type{!Array<!proto.notification_setting.NotificationSetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.notification_setting.NotificationSetting, 1));
};


/**
 * @param {!Array<!proto.notification_setting.NotificationSetting>} value
 * @return {!proto.notification_setting.NotificationSettingList} returns this
*/
proto.notification_setting.NotificationSettingList.prototype.setNotificationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.notification_setting.NotificationSetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.notification_setting.NotificationSetting}
 */
proto.notification_setting.NotificationSettingList.prototype.addNotification = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.notification_setting.NotificationSetting, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.notification_setting.NotificationSettingList} returns this
 */
proto.notification_setting.NotificationSettingList.prototype.clearNotificationList = function() {
  return this.setNotificationList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingIdRequest}
 */
proto.notification_setting.NotificationSettingIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingIdRequest;
  return proto.notification_setting.NotificationSettingIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingIdRequest}
 */
proto.notification_setting.NotificationSettingIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.notification_setting.NotificationSettingIdRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.notification_setting.NotificationSettingIdRequest} returns this
 */
proto.notification_setting.NotificationSettingIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.notification_setting.NotificationSettingIdListRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingIdListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingIdListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingIdListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingIdListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingIdListRequest}
 */
proto.notification_setting.NotificationSettingIdListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingIdListRequest;
  return proto.notification_setting.NotificationSettingIdListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingIdListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingIdListRequest}
 */
proto.notification_setting.NotificationSettingIdListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addId(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingIdListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingIdListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingIdListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingIdListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 id = 1;
 * @return {!Array<number>}
 */
proto.notification_setting.NotificationSettingIdListRequest.prototype.getIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.notification_setting.NotificationSettingIdListRequest} returns this
 */
proto.notification_setting.NotificationSettingIdListRequest.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.notification_setting.NotificationSettingIdListRequest} returns this
 */
proto.notification_setting.NotificationSettingIdListRequest.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.notification_setting.NotificationSettingIdListRequest} returns this
 */
proto.notification_setting.NotificationSettingIdListRequest.prototype.clearIdList = function() {
  return this.setIdList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingUserIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingUserIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingUserIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingUserIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingUserIdRequest}
 */
proto.notification_setting.NotificationSettingUserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingUserIdRequest;
  return proto.notification_setting.NotificationSettingUserIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingUserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingUserIdRequest}
 */
proto.notification_setting.NotificationSettingUserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingUserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingUserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingUserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingUserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.notification_setting.NotificationSettingUserIdRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.notification_setting.NotificationSettingUserIdRequest} returns this
 */
proto.notification_setting.NotificationSettingUserIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingContentIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingContentIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingContentIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingContentIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingContentIdRequest}
 */
proto.notification_setting.NotificationSettingContentIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingContentIdRequest;
  return proto.notification_setting.NotificationSettingContentIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingContentIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingContentIdRequest}
 */
proto.notification_setting.NotificationSettingContentIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingContentIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingContentIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingContentIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingContentIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 content_id = 1;
 * @return {number}
 */
proto.notification_setting.NotificationSettingContentIdRequest.prototype.getContentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.notification_setting.NotificationSettingContentIdRequest} returns this
 */
proto.notification_setting.NotificationSettingContentIdRequest.prototype.setContentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingUuidRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingUuidRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingUuidRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingUuidRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingUuidRequest}
 */
proto.notification_setting.NotificationSettingUuidRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingUuidRequest;
  return proto.notification_setting.NotificationSettingUuidRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingUuidRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingUuidRequest}
 */
proto.notification_setting.NotificationSettingUuidRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingUuidRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingUuidRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingUuidRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingUuidRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.notification_setting.NotificationSettingUuidRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification_setting.NotificationSettingUuidRequest} returns this
 */
proto.notification_setting.NotificationSettingUuidRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingUserIdAndContentIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    contentId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingUserIdAndContentIdRequest}
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingUserIdAndContentIdRequest;
  return proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingUserIdAndContentIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingUserIdAndContentIdRequest}
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingUserIdAndContentIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getContentId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.notification_setting.NotificationSettingUserIdAndContentIdRequest} returns this
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 content_id = 2;
 * @return {number}
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.prototype.getContentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.notification_setting.NotificationSettingUserIdAndContentIdRequest} returns this
 */
proto.notification_setting.NotificationSettingUserIdAndContentIdRequest.prototype.setContentId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification_setting.NotificationSettingBoolResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.notification_setting.NotificationSettingBoolResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification_setting.NotificationSettingBoolResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingBoolResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification_setting.NotificationSettingBoolResponse}
 */
proto.notification_setting.NotificationSettingBoolResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification_setting.NotificationSettingBoolResponse;
  return proto.notification_setting.NotificationSettingBoolResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification_setting.NotificationSettingBoolResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification_setting.NotificationSettingBoolResponse}
 */
proto.notification_setting.NotificationSettingBoolResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification_setting.NotificationSettingBoolResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification_setting.NotificationSettingBoolResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification_setting.NotificationSettingBoolResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification_setting.NotificationSettingBoolResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool error = 1;
 * @return {boolean}
 */
proto.notification_setting.NotificationSettingBoolResponse.prototype.getError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification_setting.NotificationSettingBoolResponse} returns this
 */
proto.notification_setting.NotificationSettingBoolResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.notification_setting);

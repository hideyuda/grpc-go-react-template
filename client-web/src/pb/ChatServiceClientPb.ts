/**
 * @fileoverview gRPC-Web generated client stub for chat
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.6
// source: chat.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as chat_pb from './chat_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class ChatGroupServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/chat.ChatGroupService/Create',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatGroup,
    chat_pb.ChatGroup,
    (request: chat_pb.ChatGroup) => {
      return request.serializeBinary();
    },
    chat_pb.ChatGroup.deserializeBinary
  );

  create(
    request: chat_pb.ChatGroup,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatGroup>;

  create(
    request: chat_pb.ChatGroup,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroup) => void): grpcWeb.ClientReadableStream<chat_pb.ChatGroup>;

  create(
    request: chat_pb.ChatGroup,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroup) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatGroupService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatGroupService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/chat.ChatGroupService/Update',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatGroup,
    chat_pb.ChatBoolResponse,
    (request: chat_pb.ChatGroup) => {
      return request.serializeBinary();
    },
    chat_pb.ChatBoolResponse.deserializeBinary
  );

  update(
    request: chat_pb.ChatGroup,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatBoolResponse>;

  update(
    request: chat_pb.ChatGroup,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void): grpcWeb.ClientReadableStream<chat_pb.ChatBoolResponse>;

  update(
    request: chat_pb.ChatGroup,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatGroupService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatGroupService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/chat.ChatGroupService/Delete',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatIdRequest,
    chat_pb.ChatBoolResponse,
    (request: chat_pb.ChatIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatBoolResponse.deserializeBinary
  );

  delete(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatBoolResponse>;

  delete(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void): grpcWeb.ClientReadableStream<chat_pb.ChatBoolResponse>;

  delete(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatGroupService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatGroupService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/chat.ChatGroupService/GetById',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatIdRequest,
    chat_pb.ChatGroup,
    (request: chat_pb.ChatIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatGroup.deserializeBinary
  );

  getById(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatGroup>;

  getById(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroup) => void): grpcWeb.ClientReadableStream<chat_pb.ChatGroup>;

  getById(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroup) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatGroupService/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatGroupService/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetByUuid = new grpcWeb.MethodDescriptor(
    '/chat.ChatGroupService/GetByUuid',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatUuidRequest,
    chat_pb.ChatGroup,
    (request: chat_pb.ChatUuidRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatGroup.deserializeBinary
  );

  getByUuid(
    request: chat_pb.ChatUuidRequest,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatGroup>;

  getByUuid(
    request: chat_pb.ChatUuidRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroup) => void): grpcWeb.ClientReadableStream<chat_pb.ChatGroup>;

  getByUuid(
    request: chat_pb.ChatUuidRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroup) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatGroupService/GetByUuid',
        request,
        metadata || {},
        this.methodDescriptorGetByUuid,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatGroupService/GetByUuid',
    request,
    metadata || {},
    this.methodDescriptorGetByUuid);
  }

  methodDescriptorGetListByUser = new grpcWeb.MethodDescriptor(
    '/chat.ChatGroupService/GetListByUser',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatUserIdRequest,
    chat_pb.ChatGroupList,
    (request: chat_pb.ChatUserIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatGroupList.deserializeBinary
  );

  getListByUser(
    request: chat_pb.ChatUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatGroupList>;

  getListByUser(
    request: chat_pb.ChatUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroupList) => void): grpcWeb.ClientReadableStream<chat_pb.ChatGroupList>;

  getListByUser(
    request: chat_pb.ChatUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroupList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatGroupService/GetListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatGroupService/GetListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetListByUser);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/chat.ChatGroupService/GetAll',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    chat_pb.ChatGroupList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    chat_pb.ChatGroupList.deserializeBinary
  );

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatGroupList>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroupList) => void): grpcWeb.ClientReadableStream<chat_pb.ChatGroupList>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatGroupList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatGroupService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatGroupService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

}

export class ChatServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/chat.ChatService/Create',
    grpcWeb.MethodType.UNARY,
    chat_pb.Chat,
    chat_pb.Chat,
    (request: chat_pb.Chat) => {
      return request.serializeBinary();
    },
    chat_pb.Chat.deserializeBinary
  );

  create(
    request: chat_pb.Chat,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.Chat>;

  create(
    request: chat_pb.Chat,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.Chat) => void): grpcWeb.ClientReadableStream<chat_pb.Chat>;

  create(
    request: chat_pb.Chat,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.Chat) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/chat.ChatService/Update',
    grpcWeb.MethodType.UNARY,
    chat_pb.Chat,
    chat_pb.ChatBoolResponse,
    (request: chat_pb.Chat) => {
      return request.serializeBinary();
    },
    chat_pb.ChatBoolResponse.deserializeBinary
  );

  update(
    request: chat_pb.Chat,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatBoolResponse>;

  update(
    request: chat_pb.Chat,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void): grpcWeb.ClientReadableStream<chat_pb.ChatBoolResponse>;

  update(
    request: chat_pb.Chat,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/chat.ChatService/Delete',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatIdRequest,
    chat_pb.ChatBoolResponse,
    (request: chat_pb.ChatIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatBoolResponse.deserializeBinary
  );

  delete(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatBoolResponse>;

  delete(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void): grpcWeb.ClientReadableStream<chat_pb.ChatBoolResponse>;

  delete(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/chat.ChatService/GetById',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatIdRequest,
    chat_pb.Chat,
    (request: chat_pb.ChatIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.Chat.deserializeBinary
  );

  getById(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.Chat>;

  getById(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.Chat) => void): grpcWeb.ClientReadableStream<chat_pb.Chat>;

  getById(
    request: chat_pb.ChatIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.Chat) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatService/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatService/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetListByGroup = new grpcWeb.MethodDescriptor(
    '/chat.ChatService/GetListByGroup',
    grpcWeb.MethodType.UNARY,
    chat_pb.ChatGroupIdRequest,
    chat_pb.ChatList,
    (request: chat_pb.ChatGroupIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.ChatList.deserializeBinary
  );

  getListByGroup(
    request: chat_pb.ChatGroupIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<chat_pb.ChatList>;

  getListByGroup(
    request: chat_pb.ChatGroupIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: chat_pb.ChatList) => void): grpcWeb.ClientReadableStream<chat_pb.ChatList>;

  getListByGroup(
    request: chat_pb.ChatGroupIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: chat_pb.ChatList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/chat.ChatService/GetListByGroup',
        request,
        metadata || {},
        this.methodDescriptorGetListByGroup,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/chat.ChatService/GetListByGroup',
    request,
    metadata || {},
    this.methodDescriptorGetListByGroup);
  }

  methodDescriptorGetStreamByGroup = new grpcWeb.MethodDescriptor(
    '/chat.ChatService/GetStreamByGroup',
    grpcWeb.MethodType.SERVER_STREAMING,
    chat_pb.ChatGroupIdRequest,
    chat_pb.Chat,
    (request: chat_pb.ChatGroupIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.Chat.deserializeBinary
  );

  getStreamByGroup(
    request: chat_pb.ChatGroupIdRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<chat_pb.Chat> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/chat.ChatService/GetStreamByGroup',
      request,
      metadata || {},
      this.methodDescriptorGetStreamByGroup);
  }

  methodDescriptorGetLatestChatByUser = new grpcWeb.MethodDescriptor(
    '/chat.ChatService/GetLatestChatByUser',
    grpcWeb.MethodType.SERVER_STREAMING,
    chat_pb.ChatUserIdRequest,
    chat_pb.Chat,
    (request: chat_pb.ChatUserIdRequest) => {
      return request.serializeBinary();
    },
    chat_pb.Chat.deserializeBinary
  );

  getLatestChatByUser(
    request: chat_pb.ChatUserIdRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<chat_pb.Chat> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/chat.ChatService/GetLatestChatByUser',
      request,
      metadata || {},
      this.methodDescriptorGetLatestChatByUser);
  }

}


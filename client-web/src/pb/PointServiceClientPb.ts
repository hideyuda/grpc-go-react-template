/**
 * @fileoverview gRPC-Web generated client stub for point
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.6
// source: point.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as point_pb from './point_pb';


export class PointServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/point.PointService/Create',
    grpcWeb.MethodType.UNARY,
    point_pb.Point,
    point_pb.Point,
    (request: point_pb.Point) => {
      return request.serializeBinary();
    },
    point_pb.Point.deserializeBinary
  );

  create(
    request: point_pb.Point,
    metadata: grpcWeb.Metadata | null): Promise<point_pb.Point>;

  create(
    request: point_pb.Point,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void): grpcWeb.ClientReadableStream<point_pb.Point>;

  create(
    request: point_pb.Point,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/point.PointService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/point.PointService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/point.PointService/Update',
    grpcWeb.MethodType.UNARY,
    point_pb.Point,
    point_pb.PointBoolResponse,
    (request: point_pb.Point) => {
      return request.serializeBinary();
    },
    point_pb.PointBoolResponse.deserializeBinary
  );

  update(
    request: point_pb.Point,
    metadata: grpcWeb.Metadata | null): Promise<point_pb.PointBoolResponse>;

  update(
    request: point_pb.Point,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: point_pb.PointBoolResponse) => void): grpcWeb.ClientReadableStream<point_pb.PointBoolResponse>;

  update(
    request: point_pb.Point,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: point_pb.PointBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/point.PointService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/point.PointService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/point.PointService/Delete',
    grpcWeb.MethodType.UNARY,
    point_pb.PointIdRequest,
    point_pb.PointBoolResponse,
    (request: point_pb.PointIdRequest) => {
      return request.serializeBinary();
    },
    point_pb.PointBoolResponse.deserializeBinary
  );

  delete(
    request: point_pb.PointIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<point_pb.PointBoolResponse>;

  delete(
    request: point_pb.PointIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: point_pb.PointBoolResponse) => void): grpcWeb.ClientReadableStream<point_pb.PointBoolResponse>;

  delete(
    request: point_pb.PointIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: point_pb.PointBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/point.PointService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/point.PointService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/point.PointService/GetById',
    grpcWeb.MethodType.UNARY,
    point_pb.PointIdRequest,
    point_pb.Point,
    (request: point_pb.PointIdRequest) => {
      return request.serializeBinary();
    },
    point_pb.Point.deserializeBinary
  );

  getById(
    request: point_pb.PointIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<point_pb.Point>;

  getById(
    request: point_pb.PointIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void): grpcWeb.ClientReadableStream<point_pb.Point>;

  getById(
    request: point_pb.PointIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/point.PointService/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/point.PointService/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetByUuid = new grpcWeb.MethodDescriptor(
    '/point.PointService/GetByUuid',
    grpcWeb.MethodType.UNARY,
    point_pb.PointUuidRequest,
    point_pb.Point,
    (request: point_pb.PointUuidRequest) => {
      return request.serializeBinary();
    },
    point_pb.Point.deserializeBinary
  );

  getByUuid(
    request: point_pb.PointUuidRequest,
    metadata: grpcWeb.Metadata | null): Promise<point_pb.Point>;

  getByUuid(
    request: point_pb.PointUuidRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void): grpcWeb.ClientReadableStream<point_pb.Point>;

  getByUuid(
    request: point_pb.PointUuidRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/point.PointService/GetByUuid',
        request,
        metadata || {},
        this.methodDescriptorGetByUuid,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/point.PointService/GetByUuid',
    request,
    metadata || {},
    this.methodDescriptorGetByUuid);
  }

  methodDescriptorGetByUser = new grpcWeb.MethodDescriptor(
    '/point.PointService/GetByUser',
    grpcWeb.MethodType.UNARY,
    point_pb.PointUserIdRequest,
    point_pb.Point,
    (request: point_pb.PointUserIdRequest) => {
      return request.serializeBinary();
    },
    point_pb.Point.deserializeBinary
  );

  getByUser(
    request: point_pb.PointUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<point_pb.Point>;

  getByUser(
    request: point_pb.PointUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void): grpcWeb.ClientReadableStream<point_pb.Point>;

  getByUser(
    request: point_pb.PointUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: point_pb.Point) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/point.PointService/GetByUser',
        request,
        metadata || {},
        this.methodDescriptorGetByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/point.PointService/GetByUser',
    request,
    metadata || {},
    this.methodDescriptorGetByUser);
  }

  methodDescriptorGetListByIdList = new grpcWeb.MethodDescriptor(
    '/point.PointService/GetListByIdList',
    grpcWeb.MethodType.UNARY,
    point_pb.PointIdListRequest,
    point_pb.PointList,
    (request: point_pb.PointIdListRequest) => {
      return request.serializeBinary();
    },
    point_pb.PointList.deserializeBinary
  );

  getListByIdList(
    request: point_pb.PointIdListRequest,
    metadata: grpcWeb.Metadata | null): Promise<point_pb.PointList>;

  getListByIdList(
    request: point_pb.PointIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: point_pb.PointList) => void): grpcWeb.ClientReadableStream<point_pb.PointList>;

  getListByIdList(
    request: point_pb.PointIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: point_pb.PointList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/point.PointService/GetListByIdList',
        request,
        metadata || {},
        this.methodDescriptorGetListByIdList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/point.PointService/GetListByIdList',
    request,
    metadata || {},
    this.methodDescriptorGetListByIdList);
  }

}


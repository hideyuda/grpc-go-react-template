// source: content.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.content.Content', null, global);
goog.exportSymbol('proto.content.Content.Currency', null, global);
goog.exportSymbol('proto.content.ContentBoolResponse', null, global);
goog.exportSymbol('proto.content.ContentCategory', null, global);
goog.exportSymbol('proto.content.ContentCategory.Category', null, global);
goog.exportSymbol('proto.content.ContentDetail', null, global);
goog.exportSymbol('proto.content.ContentDetail.StableDiffusionModel', null, global);
goog.exportSymbol('proto.content.ContentDetail.StableDiffusionSampler', null, global);
goog.exportSymbol('proto.content.ContentIdAndUserIdRequest', null, global);
goog.exportSymbol('proto.content.ContentIdListRequest', null, global);
goog.exportSymbol('proto.content.ContentIdRequest', null, global);
goog.exportSymbol('proto.content.ContentList', null, global);
goog.exportSymbol('proto.content.ContentPreview', null, global);
goog.exportSymbol('proto.content.ContentSearchRequest', null, global);
goog.exportSymbol('proto.content.ContentSearchRequest.SortBy', null, global);
goog.exportSymbol('proto.content.ContentSubCategory', null, global);
goog.exportSymbol('proto.content.ContentSubCategory.SubCategory', null, global);
goog.exportSymbol('proto.content.ContentTool', null, global);
goog.exportSymbol('proto.content.ContentTool.Tool', null, global);
goog.exportSymbol('proto.content.ContentUserIdRequest', null, global);
goog.exportSymbol('proto.content.ContentUuidAndUserIdRequest', null, global);
goog.exportSymbol('proto.content.ContentUuidRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.Content = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.Content.repeatedFields_, null);
};
goog.inherits(proto.content.Content, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.Content.displayName = 'proto.content.Content';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentPreview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentPreview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentPreview.displayName = 'proto.content.ContentPreview';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentDetail.displayName = 'proto.content.ContentDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentTool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentTool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentTool.displayName = 'proto.content.ContentTool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentCategory.displayName = 'proto.content.ContentCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentSubCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentSubCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentSubCategory.displayName = 'proto.content.ContentSubCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.ContentList.repeatedFields_, null);
};
goog.inherits(proto.content.ContentList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentList.displayName = 'proto.content.ContentList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentIdRequest.displayName = 'proto.content.ContentIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentIdAndUserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentIdAndUserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentIdAndUserIdRequest.displayName = 'proto.content.ContentIdAndUserIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentUuidRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentUuidRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentUuidRequest.displayName = 'proto.content.ContentUuidRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentUuidAndUserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentUuidAndUserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentUuidAndUserIdRequest.displayName = 'proto.content.ContentUuidAndUserIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentIdListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.ContentIdListRequest.repeatedFields_, null);
};
goog.inherits(proto.content.ContentIdListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentIdListRequest.displayName = 'proto.content.ContentIdListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentUserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentUserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentUserIdRequest.displayName = 'proto.content.ContentUserIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentBoolResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentBoolResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentBoolResponse.displayName = 'proto.content.ContentBoolResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.ContentSearchRequest.repeatedFields_, null);
};
goog.inherits(proto.content.ContentSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentSearchRequest.displayName = 'proto.content.ContentSearchRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.Content.repeatedFields_ = [16,17,18,19,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.Content.prototype.toObject = function(opt_includeInstance) {
  return proto.content.Content.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.Content} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.Content.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    thumbnail: jspb.Message.getFieldWithDefault(msg, 6, ""),
    price: jspb.Message.getFieldWithDefault(msg, 8, 0),
    aspRate: jspb.Message.getFieldWithDefault(msg, 9, 0),
    requestProgress: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isOpen: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 13, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 14, ""),
    isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    detailsList: jspb.Message.toObjectList(msg.getDetailsList(),
    proto.content.ContentDetail.toObject, includeInstance),
    toolsList: jspb.Message.toObjectList(msg.getToolsList(),
    proto.content.ContentTool.toObject, includeInstance),
    categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    proto.content.ContentCategory.toObject, includeInstance),
    subCategoriesList: jspb.Message.toObjectList(msg.getSubCategoriesList(),
    proto.content.ContentSubCategory.toObject, includeInstance),
    previewsList: jspb.Message.toObjectList(msg.getPreviewsList(),
    proto.content.ContentPreview.toObject, includeInstance),
    likeCount: jspb.Message.getFieldWithDefault(msg, 21, 0),
    impressionCount: jspb.Message.getFieldWithDefault(msg, 22, 0),
    viewCount: jspb.Message.getFieldWithDefault(msg, 23, 0),
    clickCount: jspb.Message.getFieldWithDefault(msg, 24, 0),
    orderCount: jspb.Message.getFieldWithDefault(msg, 25, 0),
    purchaseCount: jspb.Message.getFieldWithDefault(msg, 26, 0),
    reviewCount: jspb.Message.getFieldWithDefault(msg, 27, 0),
    shareCount: jspb.Message.getFieldWithDefault(msg, 28, 0),
    aspCount: jspb.Message.getFieldWithDefault(msg, 29, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 30, 0),
    starRate: jspb.Message.getFieldWithDefault(msg, 31, 0),
    userName: jspb.Message.getFieldWithDefault(msg, 32, 0),
    userIcon: jspb.Message.getFieldWithDefault(msg, 33, 0),
    userDescription: jspb.Message.getFieldWithDefault(msg, 34, 0),
    isLiked: jspb.Message.getBooleanFieldWithDefault(msg, 35, false),
    isPurchased: jspb.Message.getBooleanFieldWithDefault(msg, 36, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.Content}
 */
proto.content.Content.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.Content;
  return proto.content.Content.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.Content} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.Content}
 */
proto.content.Content.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnail(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAspRate(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequestProgress(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOpen(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeleted(value);
      break;
    case 16:
      var value = new proto.content.ContentDetail;
      reader.readMessage(value,proto.content.ContentDetail.deserializeBinaryFromReader);
      msg.addDetails(value);
      break;
    case 17:
      var value = new proto.content.ContentTool;
      reader.readMessage(value,proto.content.ContentTool.deserializeBinaryFromReader);
      msg.addTools(value);
      break;
    case 18:
      var value = new proto.content.ContentCategory;
      reader.readMessage(value,proto.content.ContentCategory.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    case 19:
      var value = new proto.content.ContentSubCategory;
      reader.readMessage(value,proto.content.ContentSubCategory.deserializeBinaryFromReader);
      msg.addSubCategories(value);
      break;
    case 20:
      var value = new proto.content.ContentPreview;
      reader.readMessage(value,proto.content.ContentPreview.deserializeBinaryFromReader);
      msg.addPreviews(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLikeCount(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setImpressionCount(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setViewCount(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClickCount(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrderCount(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPurchaseCount(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReviewCount(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShareCount(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAspCount(value);
      break;
    case 30:
      var value = /** @type {!proto.content.Content.Currency} */ (reader.readEnum());
      msg.setCurrency(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarRate(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserName(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserIcon(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserDescription(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLiked(value);
      break;
    case 36:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPurchased(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.Content.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.Content.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.Content} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.Content.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getThumbnail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getAspRate();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getRequestProgress();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsOpen();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.content.ContentDetail.serializeBinaryToWriter
    );
  }
  f = message.getToolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.content.ContentTool.serializeBinaryToWriter
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.content.ContentCategory.serializeBinaryToWriter
    );
  }
  f = message.getSubCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.content.ContentSubCategory.serializeBinaryToWriter
    );
  }
  f = message.getPreviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.content.ContentPreview.serializeBinaryToWriter
    );
  }
  f = message.getLikeCount();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getImpressionCount();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getViewCount();
  if (f !== 0) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = message.getClickCount();
  if (f !== 0) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = message.getOrderCount();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getPurchaseCount();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
  f = message.getReviewCount();
  if (f !== 0) {
    writer.writeInt64(
      27,
      f
    );
  }
  f = message.getShareCount();
  if (f !== 0) {
    writer.writeInt64(
      28,
      f
    );
  }
  f = message.getAspCount();
  if (f !== 0) {
    writer.writeInt64(
      29,
      f
    );
  }
  f = message.getCurrency();
  if (f !== 0.0) {
    writer.writeEnum(
      30,
      f
    );
  }
  f = message.getStarRate();
  if (f !== 0) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = message.getUserName();
  if (f !== 0) {
    writer.writeInt64(
      32,
      f
    );
  }
  f = message.getUserIcon();
  if (f !== 0) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getUserDescription();
  if (f !== 0) {
    writer.writeInt64(
      34,
      f
    );
  }
  f = message.getIsLiked();
  if (f) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getIsPurchased();
  if (f) {
    writer.writeBool(
      36,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.content.Content.Currency = {
  USD: 0,
  JPY: 1,
  EUR: 2,
  GBP: 3
};

/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.Content.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.content.Content.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 user_id = 3;
 * @return {number}
 */
proto.content.Content.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.content.Content.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.content.Content.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string thumbnail = 6;
 * @return {string}
 */
proto.content.Content.prototype.getThumbnail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setThumbnail = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 price = 8;
 * @return {number}
 */
proto.content.Content.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 asp_rate = 9;
 * @return {number}
 */
proto.content.Content.prototype.getAspRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setAspRate = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool request_progress = 11;
 * @return {boolean}
 */
proto.content.Content.prototype.getRequestProgress = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setRequestProgress = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_open = 12;
 * @return {boolean}
 */
proto.content.Content.prototype.getIsOpen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setIsOpen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string created_at = 13;
 * @return {string}
 */
proto.content.Content.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string updated_at = 14;
 * @return {string}
 */
proto.content.Content.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool is_deleted = 15;
 * @return {boolean}
 */
proto.content.Content.prototype.getIsDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setIsDeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * repeated ContentDetail details = 16;
 * @return {!Array<!proto.content.ContentDetail>}
 */
proto.content.Content.prototype.getDetailsList = function() {
  return /** @type{!Array<!proto.content.ContentDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.ContentDetail, 16));
};


/**
 * @param {!Array<!proto.content.ContentDetail>} value
 * @return {!proto.content.Content} returns this
*/
proto.content.Content.prototype.setDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.content.ContentDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.ContentDetail}
 */
proto.content.Content.prototype.addDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.content.ContentDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};


/**
 * repeated ContentTool tools = 17;
 * @return {!Array<!proto.content.ContentTool>}
 */
proto.content.Content.prototype.getToolsList = function() {
  return /** @type{!Array<!proto.content.ContentTool>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.ContentTool, 17));
};


/**
 * @param {!Array<!proto.content.ContentTool>} value
 * @return {!proto.content.Content} returns this
*/
proto.content.Content.prototype.setToolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.content.ContentTool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.ContentTool}
 */
proto.content.Content.prototype.addTools = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.content.ContentTool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.clearToolsList = function() {
  return this.setToolsList([]);
};


/**
 * repeated ContentCategory categories = 18;
 * @return {!Array<!proto.content.ContentCategory>}
 */
proto.content.Content.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.content.ContentCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.ContentCategory, 18));
};


/**
 * @param {!Array<!proto.content.ContentCategory>} value
 * @return {!proto.content.Content} returns this
*/
proto.content.Content.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.content.ContentCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.ContentCategory}
 */
proto.content.Content.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.content.ContentCategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * repeated ContentSubCategory sub_categories = 19;
 * @return {!Array<!proto.content.ContentSubCategory>}
 */
proto.content.Content.prototype.getSubCategoriesList = function() {
  return /** @type{!Array<!proto.content.ContentSubCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.ContentSubCategory, 19));
};


/**
 * @param {!Array<!proto.content.ContentSubCategory>} value
 * @return {!proto.content.Content} returns this
*/
proto.content.Content.prototype.setSubCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.content.ContentSubCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.ContentSubCategory}
 */
proto.content.Content.prototype.addSubCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.content.ContentSubCategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.clearSubCategoriesList = function() {
  return this.setSubCategoriesList([]);
};


/**
 * repeated ContentPreview previews = 20;
 * @return {!Array<!proto.content.ContentPreview>}
 */
proto.content.Content.prototype.getPreviewsList = function() {
  return /** @type{!Array<!proto.content.ContentPreview>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.ContentPreview, 20));
};


/**
 * @param {!Array<!proto.content.ContentPreview>} value
 * @return {!proto.content.Content} returns this
*/
proto.content.Content.prototype.setPreviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.content.ContentPreview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.ContentPreview}
 */
proto.content.Content.prototype.addPreviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.content.ContentPreview, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.clearPreviewsList = function() {
  return this.setPreviewsList([]);
};


/**
 * optional int64 like_count = 21;
 * @return {number}
 */
proto.content.Content.prototype.getLikeCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setLikeCount = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int64 impression_count = 22;
 * @return {number}
 */
proto.content.Content.prototype.getImpressionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setImpressionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int64 view_count = 23;
 * @return {number}
 */
proto.content.Content.prototype.getViewCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setViewCount = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int64 click_count = 24;
 * @return {number}
 */
proto.content.Content.prototype.getClickCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setClickCount = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int64 order_count = 25;
 * @return {number}
 */
proto.content.Content.prototype.getOrderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setOrderCount = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int64 purchase_count = 26;
 * @return {number}
 */
proto.content.Content.prototype.getPurchaseCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setPurchaseCount = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int64 review_count = 27;
 * @return {number}
 */
proto.content.Content.prototype.getReviewCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setReviewCount = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int64 share_count = 28;
 * @return {number}
 */
proto.content.Content.prototype.getShareCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setShareCount = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int64 asp_count = 29;
 * @return {number}
 */
proto.content.Content.prototype.getAspCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setAspCount = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional Currency currency = 30;
 * @return {!proto.content.Content.Currency}
 */
proto.content.Content.prototype.getCurrency = function() {
  return /** @type {!proto.content.Content.Currency} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {!proto.content.Content.Currency} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3EnumField(this, 30, value);
};


/**
 * optional int64 star_rate = 31;
 * @return {number}
 */
proto.content.Content.prototype.getStarRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setStarRate = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};


/**
 * optional int64 user_name = 32;
 * @return {number}
 */
proto.content.Content.prototype.getUserName = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setUserName = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int64 user_icon = 33;
 * @return {number}
 */
proto.content.Content.prototype.getUserIcon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setUserIcon = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int64 user_description = 34;
 * @return {number}
 */
proto.content.Content.prototype.getUserDescription = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setUserDescription = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional bool is_liked = 35;
 * @return {boolean}
 */
proto.content.Content.prototype.getIsLiked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setIsLiked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 35, value);
};


/**
 * optional bool is_purchased = 36;
 * @return {boolean}
 */
proto.content.Content.prototype.getIsPurchased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 36, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.Content} returns this
 */
proto.content.Content.prototype.setIsPurchased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 36, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentPreview.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentPreview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentPreview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentPreview.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    previewInput: jspb.Message.getFieldWithDefault(msg, 4, ""),
    previewOutput: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentPreview}
 */
proto.content.ContentPreview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentPreview;
  return proto.content.ContentPreview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentPreview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentPreview}
 */
proto.content.ContentPreview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContentId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewInput(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewOutput(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentPreview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentPreview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentPreview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentPreview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPreviewInput();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPreviewOutput();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.ContentPreview.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentPreview} returns this
 */
proto.content.ContentPreview.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.content.ContentPreview.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentPreview} returns this
 */
proto.content.ContentPreview.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 content_id = 3;
 * @return {number}
 */
proto.content.ContentPreview.prototype.getContentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentPreview} returns this
 */
proto.content.ContentPreview.prototype.setContentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string preview_input = 4;
 * @return {string}
 */
proto.content.ContentPreview.prototype.getPreviewInput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentPreview} returns this
 */
proto.content.ContentPreview.prototype.setPreviewInput = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string preview_output = 5;
 * @return {string}
 */
proto.content.ContentPreview.prototype.getPreviewOutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentPreview} returns this
 */
proto.content.ContentPreview.prototype.setPreviewOutput = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.content.ContentPreview.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentPreview} returns this
 */
proto.content.ContentPreview.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.content.ContentPreview.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentPreview} returns this
 */
proto.content.ContentPreview.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    prompt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    testingPrompt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    engine: jspb.Message.getFieldWithDefault(msg, 9, 0),
    promptInstruction: jspb.Message.getFieldWithDefault(msg, 10, ""),
    url: jspb.Message.getFieldWithDefault(msg, 11, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 12, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 13, ""),
    isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    stableDiffusionModel: jspb.Message.getFieldWithDefault(msg, 100, 0),
    stableDiffusionSampler: jspb.Message.getFieldWithDefault(msg, 101, 0),
    imageWidth: jspb.Message.getFieldWithDefault(msg, 102, 0),
    imageHeight: jspb.Message.getFieldWithDefault(msg, 103, 0),
    cfgScale: jspb.Message.getFieldWithDefault(msg, 104, 0),
    steps: jspb.Message.getFieldWithDefault(msg, 105, 0),
    seed: jspb.Message.getFieldWithDefault(msg, 106, ""),
    clipGuidance: jspb.Message.getBooleanFieldWithDefault(msg, 107, false),
    nagativePrompt: jspb.Message.getFieldWithDefault(msg, 108, ""),
    title: jspb.Message.getFieldWithDefault(msg, 109, ""),
    description: jspb.Message.getFieldWithDefault(msg, 110, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentDetail}
 */
proto.content.ContentDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentDetail;
  return proto.content.ContentDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentDetail}
 */
proto.content.ContentDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContentId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrompt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestingPrompt(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEngine(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromptInstruction(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeleted(value);
      break;
    case 100:
      var value = /** @type {!proto.content.ContentDetail.StableDiffusionModel} */ (reader.readEnum());
      msg.setStableDiffusionModel(value);
      break;
    case 101:
      var value = /** @type {!proto.content.ContentDetail.StableDiffusionSampler} */ (reader.readEnum());
      msg.setStableDiffusionSampler(value);
      break;
    case 102:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setImageWidth(value);
      break;
    case 103:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setImageHeight(value);
      break;
    case 104:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCfgScale(value);
      break;
    case 105:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSteps(value);
      break;
    case 106:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeed(value);
      break;
    case 107:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClipGuidance(value);
      break;
    case 108:
      var value = /** @type {string} */ (reader.readString());
      msg.setNagativePrompt(value);
      break;
    case 109:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 110:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPrompt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTestingPrompt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEngine();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getPromptInstruction();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getStableDiffusionModel();
  if (f !== 0.0) {
    writer.writeEnum(
      100,
      f
    );
  }
  f = message.getStableDiffusionSampler();
  if (f !== 0.0) {
    writer.writeEnum(
      101,
      f
    );
  }
  f = message.getImageWidth();
  if (f !== 0) {
    writer.writeInt64(
      102,
      f
    );
  }
  f = message.getImageHeight();
  if (f !== 0) {
    writer.writeInt64(
      103,
      f
    );
  }
  f = message.getCfgScale();
  if (f !== 0) {
    writer.writeInt64(
      104,
      f
    );
  }
  f = message.getSteps();
  if (f !== 0) {
    writer.writeInt64(
      105,
      f
    );
  }
  f = message.getSeed();
  if (f.length > 0) {
    writer.writeString(
      106,
      f
    );
  }
  f = message.getClipGuidance();
  if (f) {
    writer.writeBool(
      107,
      f
    );
  }
  f = message.getNagativePrompt();
  if (f.length > 0) {
    writer.writeString(
      108,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      109,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      110,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.content.ContentDetail.StableDiffusionModel = {
  V_1_4: 0,
  V_1_5: 1,
  V_2_0: 2,
  V_2_0_768: 3,
  V_2_1: 4,
  V_2_1_768: 5
};

/**
 * @enum {number}
 */
proto.content.ContentDetail.StableDiffusionSampler = {
  DDIM: 0,
  PLMS: 1,
  K_EULER: 2,
  K_ENLER_ANCESTRAL: 3,
  K_HEUN: 4,
  K_DPM2: 5,
  K_DPM2_ANCESTRAL: 6,
  K_LMS: 7,
  K_DPMPP_2S_ANCESTRAL: 8,
  K_DPMPP_2M: 9
};

/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.ContentDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 content_id = 3;
 * @return {number}
 */
proto.content.ContentDetail.prototype.getContentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setContentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string prompt = 6;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string testing_prompt = 7;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getTestingPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setTestingPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 engine = 9;
 * @return {number}
 */
proto.content.ContentDetail.prototype.getEngine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setEngine = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string prompt_instruction = 10;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getPromptInstruction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setPromptInstruction = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string url = 11;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string created_at = 12;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string updated_at = 13;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool is_deleted = 14;
 * @return {boolean}
 */
proto.content.ContentDetail.prototype.getIsDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setIsDeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional StableDiffusionModel stable_diffusion_model = 100;
 * @return {!proto.content.ContentDetail.StableDiffusionModel}
 */
proto.content.ContentDetail.prototype.getStableDiffusionModel = function() {
  return /** @type {!proto.content.ContentDetail.StableDiffusionModel} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {!proto.content.ContentDetail.StableDiffusionModel} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setStableDiffusionModel = function(value) {
  return jspb.Message.setProto3EnumField(this, 100, value);
};


/**
 * optional StableDiffusionSampler stable_diffusion_sampler = 101;
 * @return {!proto.content.ContentDetail.StableDiffusionSampler}
 */
proto.content.ContentDetail.prototype.getStableDiffusionSampler = function() {
  return /** @type {!proto.content.ContentDetail.StableDiffusionSampler} */ (jspb.Message.getFieldWithDefault(this, 101, 0));
};


/**
 * @param {!proto.content.ContentDetail.StableDiffusionSampler} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setStableDiffusionSampler = function(value) {
  return jspb.Message.setProto3EnumField(this, 101, value);
};


/**
 * optional int64 image_width = 102;
 * @return {number}
 */
proto.content.ContentDetail.prototype.getImageWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 102, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setImageWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 102, value);
};


/**
 * optional int64 image_height = 103;
 * @return {number}
 */
proto.content.ContentDetail.prototype.getImageHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 103, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setImageHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 103, value);
};


/**
 * optional int64 cfg_scale = 104;
 * @return {number}
 */
proto.content.ContentDetail.prototype.getCfgScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 104, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setCfgScale = function(value) {
  return jspb.Message.setProto3IntField(this, 104, value);
};


/**
 * optional int64 steps = 105;
 * @return {number}
 */
proto.content.ContentDetail.prototype.getSteps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 105, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setSteps = function(value) {
  return jspb.Message.setProto3IntField(this, 105, value);
};


/**
 * optional string seed = 106;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getSeed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 106, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setSeed = function(value) {
  return jspb.Message.setProto3StringField(this, 106, value);
};


/**
 * optional bool clip_guidance = 107;
 * @return {boolean}
 */
proto.content.ContentDetail.prototype.getClipGuidance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 107, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setClipGuidance = function(value) {
  return jspb.Message.setProto3BooleanField(this, 107, value);
};


/**
 * optional string nagative_prompt = 108;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getNagativePrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 108, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setNagativePrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 108, value);
};


/**
 * optional string title = 109;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 109, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 109, value);
};


/**
 * optional string description = 110;
 * @return {string}
 */
proto.content.ContentDetail.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 110, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentDetail} returns this
 */
proto.content.ContentDetail.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 110, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentTool.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentTool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentTool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentTool.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tool: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentTool}
 */
proto.content.ContentTool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentTool;
  return proto.content.ContentTool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentTool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentTool}
 */
proto.content.ContentTool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContentId(value);
      break;
    case 5:
      var value = /** @type {!proto.content.ContentTool.Tool} */ (reader.readEnum());
      msg.setTool(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentTool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentTool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentTool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentTool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTool();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.content.ContentTool.Tool = {
  TOOL_UNKNOWN: 0,
  CHATGPT: 1,
  GPT_3: 2,
  DALL_E: 3,
  STABLE_DIFFUSION: 4,
  MIDJOURNEY: 5
};

/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.ContentTool.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentTool} returns this
 */
proto.content.ContentTool.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.content.ContentTool.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentTool} returns this
 */
proto.content.ContentTool.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 content_id = 3;
 * @return {number}
 */
proto.content.ContentTool.prototype.getContentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentTool} returns this
 */
proto.content.ContentTool.prototype.setContentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Tool tool = 5;
 * @return {!proto.content.ContentTool.Tool}
 */
proto.content.ContentTool.prototype.getTool = function() {
  return /** @type {!proto.content.ContentTool.Tool} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.content.ContentTool.Tool} value
 * @return {!proto.content.ContentTool} returns this
 */
proto.content.ContentTool.prototype.setTool = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.content.ContentTool.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentTool} returns this
 */
proto.content.ContentTool.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.content.ContentTool.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentTool} returns this
 */
proto.content.ContentTool.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    category: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentCategory}
 */
proto.content.ContentCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentCategory;
  return proto.content.ContentCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentCategory}
 */
proto.content.ContentCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContentId(value);
      break;
    case 5:
      var value = /** @type {!proto.content.ContentCategory.Category} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.content.ContentCategory.Category = {
  YOUTUBE: 0,
  TWITTER: 1,
  INSTAGRAM: 2,
  FACEBOOK: 3,
  LINKEDIN: 4,
  TIKTOK: 5,
  PINTEREST: 6,
  REDDIT: 7,
  SNAPCHAT: 8,
  TUMBLR: 9,
  TWITCH: 10,
  WEIBO: 11,
  WECHAT: 12,
  WHATSAPP: 13,
  LINE: 14,
  TELEGRAM: 15,
  VK: 16,
  YAHOO: 17,
  OTHER: 18
};

/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.ContentCategory.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentCategory} returns this
 */
proto.content.ContentCategory.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.content.ContentCategory.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentCategory} returns this
 */
proto.content.ContentCategory.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 content_id = 3;
 * @return {number}
 */
proto.content.ContentCategory.prototype.getContentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentCategory} returns this
 */
proto.content.ContentCategory.prototype.setContentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Category category = 5;
 * @return {!proto.content.ContentCategory.Category}
 */
proto.content.ContentCategory.prototype.getCategory = function() {
  return /** @type {!proto.content.ContentCategory.Category} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.content.ContentCategory.Category} value
 * @return {!proto.content.ContentCategory} returns this
 */
proto.content.ContentCategory.prototype.setCategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.content.ContentCategory.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentCategory} returns this
 */
proto.content.ContentCategory.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.content.ContentCategory.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentCategory} returns this
 */
proto.content.ContentCategory.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentSubCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentSubCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentSubCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentSubCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    subCategory: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentSubCategory}
 */
proto.content.ContentSubCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentSubCategory;
  return proto.content.ContentSubCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentSubCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentSubCategory}
 */
proto.content.ContentSubCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContentId(value);
      break;
    case 5:
      var value = /** @type {!proto.content.ContentSubCategory.SubCategory} */ (reader.readEnum());
      msg.setSubCategory(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentSubCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentSubCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentSubCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentSubCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSubCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.content.ContentSubCategory.SubCategory = {
  YOUTUBE: 0,
  TWITTER: 1,
  INSTAGRAM: 2,
  FACEBOOK: 3,
  LINKEDIN: 4,
  TIKTOK: 5,
  PINTEREST: 6,
  REDDIT: 7,
  SNAPCHAT: 8,
  TUMBLR: 9,
  TWITCH: 10,
  WEIBO: 11,
  WECHAT: 12,
  WHATSAPP: 13,
  LINE: 14,
  TELEGRAM: 15,
  VK: 16,
  YAHOO: 17,
  OTHER: 18
};

/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.ContentSubCategory.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentSubCategory} returns this
 */
proto.content.ContentSubCategory.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.content.ContentSubCategory.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentSubCategory} returns this
 */
proto.content.ContentSubCategory.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 content_id = 3;
 * @return {number}
 */
proto.content.ContentSubCategory.prototype.getContentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentSubCategory} returns this
 */
proto.content.ContentSubCategory.prototype.setContentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional SubCategory sub_category = 5;
 * @return {!proto.content.ContentSubCategory.SubCategory}
 */
proto.content.ContentSubCategory.prototype.getSubCategory = function() {
  return /** @type {!proto.content.ContentSubCategory.SubCategory} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.content.ContentSubCategory.SubCategory} value
 * @return {!proto.content.ContentSubCategory} returns this
 */
proto.content.ContentSubCategory.prototype.setSubCategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.content.ContentSubCategory.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentSubCategory} returns this
 */
proto.content.ContentSubCategory.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.content.ContentSubCategory.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentSubCategory} returns this
 */
proto.content.ContentSubCategory.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.ContentList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentList.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentList.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentList: jspb.Message.toObjectList(msg.getContentList(),
    proto.content.Content.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentList}
 */
proto.content.ContentList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentList;
  return proto.content.ContentList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentList}
 */
proto.content.ContentList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.Content;
      reader.readMessage(value,proto.content.Content.deserializeBinaryFromReader);
      msg.addContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.Content.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Content content = 1;
 * @return {!Array<!proto.content.Content>}
 */
proto.content.ContentList.prototype.getContentList = function() {
  return /** @type{!Array<!proto.content.Content>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.Content, 1));
};


/**
 * @param {!Array<!proto.content.Content>} value
 * @return {!proto.content.ContentList} returns this
*/
proto.content.ContentList.prototype.setContentList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.Content=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.Content}
 */
proto.content.ContentList.prototype.addContent = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.Content, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.ContentList} returns this
 */
proto.content.ContentList.prototype.clearContentList = function() {
  return this.setContentList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentIdRequest}
 */
proto.content.ContentIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentIdRequest;
  return proto.content.ContentIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentIdRequest}
 */
proto.content.ContentIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.ContentIdRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentIdRequest} returns this
 */
proto.content.ContentIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentIdAndUserIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentIdAndUserIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentIdAndUserIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentIdAndUserIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentIdAndUserIdRequest}
 */
proto.content.ContentIdAndUserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentIdAndUserIdRequest;
  return proto.content.ContentIdAndUserIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentIdAndUserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentIdAndUserIdRequest}
 */
proto.content.ContentIdAndUserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentIdAndUserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentIdAndUserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentIdAndUserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentIdAndUserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.content.ContentIdAndUserIdRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentIdAndUserIdRequest} returns this
 */
proto.content.ContentIdAndUserIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 user_id = 2;
 * @return {number}
 */
proto.content.ContentIdAndUserIdRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentIdAndUserIdRequest} returns this
 */
proto.content.ContentIdAndUserIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentUuidRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentUuidRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentUuidRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentUuidRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentUuidRequest}
 */
proto.content.ContentUuidRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentUuidRequest;
  return proto.content.ContentUuidRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentUuidRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentUuidRequest}
 */
proto.content.ContentUuidRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentUuidRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentUuidRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentUuidRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentUuidRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.content.ContentUuidRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentUuidRequest} returns this
 */
proto.content.ContentUuidRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentUuidAndUserIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentUuidAndUserIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentUuidAndUserIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentUuidAndUserIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentUuidAndUserIdRequest}
 */
proto.content.ContentUuidAndUserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentUuidAndUserIdRequest;
  return proto.content.ContentUuidAndUserIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentUuidAndUserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentUuidAndUserIdRequest}
 */
proto.content.ContentUuidAndUserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentUuidAndUserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentUuidAndUserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentUuidAndUserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentUuidAndUserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.content.ContentUuidAndUserIdRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentUuidAndUserIdRequest} returns this
 */
proto.content.ContentUuidAndUserIdRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 user_id = 2;
 * @return {number}
 */
proto.content.ContentUuidAndUserIdRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentUuidAndUserIdRequest} returns this
 */
proto.content.ContentUuidAndUserIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.ContentIdListRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentIdListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentIdListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentIdListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentIdListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentIdListRequest}
 */
proto.content.ContentIdListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentIdListRequest;
  return proto.content.ContentIdListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentIdListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentIdListRequest}
 */
proto.content.ContentIdListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addId(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentIdListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentIdListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentIdListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentIdListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 id = 1;
 * @return {!Array<number>}
 */
proto.content.ContentIdListRequest.prototype.getIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.content.ContentIdListRequest} returns this
 */
proto.content.ContentIdListRequest.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.content.ContentIdListRequest} returns this
 */
proto.content.ContentIdListRequest.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.ContentIdListRequest} returns this
 */
proto.content.ContentIdListRequest.prototype.clearIdList = function() {
  return this.setIdList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentUserIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentUserIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentUserIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentUserIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentUserIdRequest}
 */
proto.content.ContentUserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentUserIdRequest;
  return proto.content.ContentUserIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentUserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentUserIdRequest}
 */
proto.content.ContentUserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentUserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentUserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentUserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentUserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.content.ContentUserIdRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentUserIdRequest} returns this
 */
proto.content.ContentUserIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentBoolResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentBoolResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentBoolResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentBoolResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentBoolResponse}
 */
proto.content.ContentBoolResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentBoolResponse;
  return proto.content.ContentBoolResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentBoolResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentBoolResponse}
 */
proto.content.ContentBoolResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentBoolResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentBoolResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentBoolResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentBoolResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool error = 1;
 * @return {boolean}
 */
proto.content.ContentBoolResponse.prototype.getError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.ContentBoolResponse} returns this
 */
proto.content.ContentBoolResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.ContentSearchRequest.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    keyword: jspb.Message.getFieldWithDefault(msg, 2, ""),
    toolList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    categoryList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    subCategoryList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    sortBy: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentSearchRequest}
 */
proto.content.ContentSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentSearchRequest;
  return proto.content.ContentSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentSearchRequest}
 */
proto.content.ContentSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 3:
      var values = /** @type {!Array<!proto.content.ContentTool.Tool>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTool(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<!proto.content.ContentCategory.Category>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategory(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<!proto.content.ContentSubCategory.SubCategory>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSubCategory(values[i]);
      }
      break;
    case 6:
      var value = /** @type {!proto.content.ContentSearchRequest.SortBy} */ (reader.readEnum());
      msg.setSortBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToolList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getCategoryList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getSubCategoryList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getSortBy();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.content.ContentSearchRequest.SortBy = {
  NEWEST: 0,
  HOTTEST: 1,
  TOP: 2,
  RECCOMEND: 3
};

/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.content.ContentSearchRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string keyword = 2;
 * @return {string}
 */
proto.content.ContentSearchRequest.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.setKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ContentTool.Tool tool = 3;
 * @return {!Array<!proto.content.ContentTool.Tool>}
 */
proto.content.ContentSearchRequest.prototype.getToolList = function() {
  return /** @type {!Array<!proto.content.ContentTool.Tool>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.content.ContentTool.Tool>} value
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.setToolList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.content.ContentTool.Tool} value
 * @param {number=} opt_index
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.addTool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.clearToolList = function() {
  return this.setToolList([]);
};


/**
 * repeated ContentCategory.Category category = 4;
 * @return {!Array<!proto.content.ContentCategory.Category>}
 */
proto.content.ContentSearchRequest.prototype.getCategoryList = function() {
  return /** @type {!Array<!proto.content.ContentCategory.Category>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.content.ContentCategory.Category>} value
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.setCategoryList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.content.ContentCategory.Category} value
 * @param {number=} opt_index
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.addCategory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.clearCategoryList = function() {
  return this.setCategoryList([]);
};


/**
 * repeated ContentSubCategory.SubCategory sub_category = 5;
 * @return {!Array<!proto.content.ContentSubCategory.SubCategory>}
 */
proto.content.ContentSearchRequest.prototype.getSubCategoryList = function() {
  return /** @type {!Array<!proto.content.ContentSubCategory.SubCategory>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.content.ContentSubCategory.SubCategory>} value
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.setSubCategoryList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.content.ContentSubCategory.SubCategory} value
 * @param {number=} opt_index
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.addSubCategory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.clearSubCategoryList = function() {
  return this.setSubCategoryList([]);
};


/**
 * optional SortBy sort_by = 6;
 * @return {!proto.content.ContentSearchRequest.SortBy}
 */
proto.content.ContentSearchRequest.prototype.getSortBy = function() {
  return /** @type {!proto.content.ContentSearchRequest.SortBy} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.content.ContentSearchRequest.SortBy} value
 * @return {!proto.content.ContentSearchRequest} returns this
 */
proto.content.ContentSearchRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


goog.object.extend(exports, proto.content);

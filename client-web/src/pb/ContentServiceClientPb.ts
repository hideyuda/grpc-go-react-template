/**
 * @fileoverview gRPC-Web generated client stub for content
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.6
// source: content.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as content_pb from './content_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class ContentServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/content.ContentService/Create',
    grpcWeb.MethodType.UNARY,
    content_pb.Content,
    content_pb.Content,
    (request: content_pb.Content) => {
      return request.serializeBinary();
    },
    content_pb.Content.deserializeBinary
  );

  create(
    request: content_pb.Content,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.Content>;

  create(
    request: content_pb.Content,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void): grpcWeb.ClientReadableStream<content_pb.Content>;

  create(
    request: content_pb.Content,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/content.ContentService/Update',
    grpcWeb.MethodType.UNARY,
    content_pb.Content,
    content_pb.ContentBoolResponse,
    (request: content_pb.Content) => {
      return request.serializeBinary();
    },
    content_pb.ContentBoolResponse.deserializeBinary
  );

  update(
    request: content_pb.Content,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentBoolResponse>;

  update(
    request: content_pb.Content,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void): grpcWeb.ClientReadableStream<content_pb.ContentBoolResponse>;

  update(
    request: content_pb.Content,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorUpdateImpressionByIdList = new grpcWeb.MethodDescriptor(
    '/content.ContentService/UpdateImpressionByIdList',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdListRequest,
    content_pb.ContentBoolResponse,
    (request: content_pb.ContentIdListRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentBoolResponse.deserializeBinary
  );

  updateImpressionByIdList(
    request: content_pb.ContentIdListRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentBoolResponse>;

  updateImpressionByIdList(
    request: content_pb.ContentIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void): grpcWeb.ClientReadableStream<content_pb.ContentBoolResponse>;

  updateImpressionByIdList(
    request: content_pb.ContentIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/UpdateImpressionByIdList',
        request,
        metadata || {},
        this.methodDescriptorUpdateImpressionByIdList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/UpdateImpressionByIdList',
    request,
    metadata || {},
    this.methodDescriptorUpdateImpressionByIdList);
  }

  methodDescriptorUpdateView = new grpcWeb.MethodDescriptor(
    '/content.ContentService/UpdateView',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdRequest,
    content_pb.ContentBoolResponse,
    (request: content_pb.ContentIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentBoolResponse.deserializeBinary
  );

  updateView(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentBoolResponse>;

  updateView(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void): grpcWeb.ClientReadableStream<content_pb.ContentBoolResponse>;

  updateView(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/UpdateView',
        request,
        metadata || {},
        this.methodDescriptorUpdateView,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/UpdateView',
    request,
    metadata || {},
    this.methodDescriptorUpdateView);
  }

  methodDescriptorUpdateClick = new grpcWeb.MethodDescriptor(
    '/content.ContentService/UpdateClick',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdRequest,
    content_pb.ContentBoolResponse,
    (request: content_pb.ContentIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentBoolResponse.deserializeBinary
  );

  updateClick(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentBoolResponse>;

  updateClick(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void): grpcWeb.ClientReadableStream<content_pb.ContentBoolResponse>;

  updateClick(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/UpdateClick',
        request,
        metadata || {},
        this.methodDescriptorUpdateClick,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/UpdateClick',
    request,
    metadata || {},
    this.methodDescriptorUpdateClick);
  }

  methodDescriptorDetaillete = new grpcWeb.MethodDescriptor(
    '/content.ContentService/Detaillete',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdRequest,
    content_pb.ContentBoolResponse,
    (request: content_pb.ContentIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentBoolResponse.deserializeBinary
  );

  detaillete(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentBoolResponse>;

  detaillete(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void): grpcWeb.ClientReadableStream<content_pb.ContentBoolResponse>;

  detaillete(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/Detaillete',
        request,
        metadata || {},
        this.methodDescriptorDetaillete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/Detaillete',
    request,
    metadata || {},
    this.methodDescriptorDetaillete);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetById',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdRequest,
    content_pb.Content,
    (request: content_pb.ContentIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.Content.deserializeBinary
  );

  getById(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.Content>;

  getById(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void): grpcWeb.ClientReadableStream<content_pb.Content>;

  getById(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetByUuid = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetByUuid',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentUuidRequest,
    content_pb.Content,
    (request: content_pb.ContentUuidRequest) => {
      return request.serializeBinary();
    },
    content_pb.Content.deserializeBinary
  );

  getByUuid(
    request: content_pb.ContentUuidRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.Content>;

  getByUuid(
    request: content_pb.ContentUuidRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void): grpcWeb.ClientReadableStream<content_pb.Content>;

  getByUuid(
    request: content_pb.ContentUuidRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetByUuid',
        request,
        metadata || {},
        this.methodDescriptorGetByUuid,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetByUuid',
    request,
    metadata || {},
    this.methodDescriptorGetByUuid);
  }

  methodDescriptorGetByUuidAndUser = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetByUuidAndUser',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentUuidAndUserIdRequest,
    content_pb.Content,
    (request: content_pb.ContentUuidAndUserIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.Content.deserializeBinary
  );

  getByUuidAndUser(
    request: content_pb.ContentUuidAndUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.Content>;

  getByUuidAndUser(
    request: content_pb.ContentUuidAndUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void): grpcWeb.ClientReadableStream<content_pb.Content>;

  getByUuidAndUser(
    request: content_pb.ContentUuidAndUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.Content) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetByUuidAndUser',
        request,
        metadata || {},
        this.methodDescriptorGetByUuidAndUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetByUuidAndUser',
    request,
    metadata || {},
    this.methodDescriptorGetByUuidAndUser);
  }

  methodDescriptorGetListByUser = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetListByUser',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentUserIdRequest,
    content_pb.ContentList,
    (request: content_pb.ContentUserIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getListByUser(
    request: content_pb.ContentUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getListByUser(
    request: content_pb.ContentUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getListByUser(
    request: content_pb.ContentUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetListByUser);
  }

  methodDescriptorGetListBySearch = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetListBySearch',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentSearchRequest,
    content_pb.ContentList,
    (request: content_pb.ContentSearchRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getListBySearch(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getListBySearch(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getListBySearch(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetListBySearch',
        request,
        metadata || {},
        this.methodDescriptorGetListBySearch,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetListBySearch',
    request,
    metadata || {},
    this.methodDescriptorGetListBySearch);
  }

  methodDescriptorGetLatestList = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetLatestList',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    content_pb.ContentList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getLatestList(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getLatestList(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getLatestList(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetLatestList',
        request,
        metadata || {},
        this.methodDescriptorGetLatestList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetLatestList',
    request,
    metadata || {},
    this.methodDescriptorGetLatestList);
  }

  methodDescriptorGetTrendList = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetTrendList',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    content_pb.ContentList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getTrendList(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getTrendList(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getTrendList(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetTrendList',
        request,
        metadata || {},
        this.methodDescriptorGetTrendList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetTrendList',
    request,
    metadata || {},
    this.methodDescriptorGetTrendList);
  }

  methodDescriptorGetRecommendedListByUser = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetRecommendedListByUser',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentUserIdRequest,
    content_pb.ContentList,
    (request: content_pb.ContentUserIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getRecommendedListByUser(
    request: content_pb.ContentUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getRecommendedListByUser(
    request: content_pb.ContentUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getRecommendedListByUser(
    request: content_pb.ContentUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetRecommendedListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetRecommendedListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetRecommendedListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetRecommendedListByUser);
  }

  methodDescriptorGetRecommendedListByContent = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetRecommendedListByContent',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdRequest,
    content_pb.ContentList,
    (request: content_pb.ContentIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getRecommendedListByContent(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getRecommendedListByContent(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getRecommendedListByContent(
    request: content_pb.ContentIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetRecommendedListByContent',
        request,
        metadata || {},
        this.methodDescriptorGetRecommendedListByContent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetRecommendedListByContent',
    request,
    metadata || {},
    this.methodDescriptorGetRecommendedListByContent);
  }

  methodDescriptorGetSoldListByUser = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetSoldListByUser',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentSearchRequest,
    content_pb.ContentList,
    (request: content_pb.ContentSearchRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getSoldListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getSoldListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getSoldListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetSoldListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetSoldListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetSoldListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetSoldListByUser);
  }

  methodDescriptorGetPurchasedListByUser = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetPurchasedListByUser',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentSearchRequest,
    content_pb.ContentList,
    (request: content_pb.ContentSearchRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getPurchasedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getPurchasedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getPurchasedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetPurchasedListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetPurchasedListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetPurchasedListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetPurchasedListByUser);
  }

  methodDescriptorGetLikedListByUser = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetLikedListByUser',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentSearchRequest,
    content_pb.ContentList,
    (request: content_pb.ContentSearchRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getLikedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getLikedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getLikedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetLikedListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetLikedListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetLikedListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetLikedListByUser);
  }

  methodDescriptorGetViewedListByUser = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetViewedListByUser',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentSearchRequest,
    content_pb.ContentList,
    (request: content_pb.ContentSearchRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getViewedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getViewedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getViewedListByUser(
    request: content_pb.ContentSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetViewedListByUser',
        request,
        metadata || {},
        this.methodDescriptorGetViewedListByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetViewedListByUser',
    request,
    metadata || {},
    this.methodDescriptorGetViewedListByUser);
  }

  methodDescriptorGetListByIdList = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetListByIdList',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdListRequest,
    content_pb.ContentList,
    (request: content_pb.ContentIdListRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getListByIdList(
    request: content_pb.ContentIdListRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getListByIdList(
    request: content_pb.ContentIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getListByIdList(
    request: content_pb.ContentIdListRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetListByIdList',
        request,
        metadata || {},
        this.methodDescriptorGetListByIdList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetListByIdList',
    request,
    metadata || {},
    this.methodDescriptorGetListByIdList);
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/content.ContentService/GetAll',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    content_pb.ContentList,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    content_pb.ContentList.deserializeBinary
  );

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentList>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void): grpcWeb.ClientReadableStream<content_pb.ContentList>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentList) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

  methodDescriptorCreateLike = new grpcWeb.MethodDescriptor(
    '/content.ContentService/CreateLike',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdAndUserIdRequest,
    content_pb.ContentBoolResponse,
    (request: content_pb.ContentIdAndUserIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentBoolResponse.deserializeBinary
  );

  createLike(
    request: content_pb.ContentIdAndUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentBoolResponse>;

  createLike(
    request: content_pb.ContentIdAndUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void): grpcWeb.ClientReadableStream<content_pb.ContentBoolResponse>;

  createLike(
    request: content_pb.ContentIdAndUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/CreateLike',
        request,
        metadata || {},
        this.methodDescriptorCreateLike,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/CreateLike',
    request,
    metadata || {},
    this.methodDescriptorCreateLike);
  }

  methodDescriptorDeleteLike = new grpcWeb.MethodDescriptor(
    '/content.ContentService/DeleteLike',
    grpcWeb.MethodType.UNARY,
    content_pb.ContentIdAndUserIdRequest,
    content_pb.ContentBoolResponse,
    (request: content_pb.ContentIdAndUserIdRequest) => {
      return request.serializeBinary();
    },
    content_pb.ContentBoolResponse.deserializeBinary
  );

  deleteLike(
    request: content_pb.ContentIdAndUserIdRequest,
    metadata: grpcWeb.Metadata | null): Promise<content_pb.ContentBoolResponse>;

  deleteLike(
    request: content_pb.ContentIdAndUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void): grpcWeb.ClientReadableStream<content_pb.ContentBoolResponse>;

  deleteLike(
    request: content_pb.ContentIdAndUserIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.ContentBoolResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/DeleteLike',
        request,
        metadata || {},
        this.methodDescriptorDeleteLike,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/DeleteLike',
    request,
    metadata || {},
    this.methodDescriptorDeleteLike);
  }

}


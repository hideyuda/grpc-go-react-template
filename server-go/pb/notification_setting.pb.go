// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: notification_setting.proto

// Specify package name to avoid name collision

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ユーザー情報を表すメッセージ型
type NotificationSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                         string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId                       int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt                    string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                    string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Followed                     bool   `protobuf:"varint,6,opt,name=followed,proto3" json:"followed,omitempty"`                                                                                  // フォロー通知
	Liked                        bool   `protobuf:"varint,7,opt,name=liked,proto3" json:"liked,omitempty"`                                                                                        // いいね通知
	Commented                    bool   `protobuf:"varint,8,opt,name=commented,proto3" json:"commented,omitempty"`                                                                                // コメント通知
	Chated                       bool   `protobuf:"varint,9,opt,name=chated,proto3" json:"chated,omitempty"`                                                                                      // チャット通知
	LikingContentDiscounted      bool   `protobuf:"varint,10,opt,name=liking_content_discounted,json=likingContentDiscounted,proto3" json:"liking_content_discounted,omitempty"`                  // いいねした商品が割引通知
	LikingContentCommented       bool   `protobuf:"varint,11,opt,name=liking_content_commented,json=likingContentCommented,proto3" json:"liking_content_commented,omitempty"`                     // いいねした商品が割引通知
	FollowingUserNew             bool   `protobuf:"varint,12,opt,name=following_user_new,json=followingUserNew,proto3" json:"following_user_new,omitempty"`                                       // フォローしたユーザーが新規投稿通知
	News                         bool   `protobuf:"varint,13,opt,name=news,proto3" json:"news,omitempty"`                                                                                         // ニュース通知
	Event                        bool   `protobuf:"varint,14,opt,name=event,proto3" json:"event,omitempty"`                                                                                       // イベント通知
	Coupon                       bool   `protobuf:"varint,15,opt,name=coupon,proto3" json:"coupon,omitempty"`                                                                                     // クーポン通知
	Update                       bool   `protobuf:"varint,16,opt,name=update,proto3" json:"update,omitempty"`                                                                                     // アップデート通知
	EmailFollowed                bool   `protobuf:"varint,17,opt,name=email_followed,json=emailFollowed,proto3" json:"email_followed,omitempty"`                                                  // フォロー通知
	EmailLiked                   bool   `protobuf:"varint,18,opt,name=email_liked,json=emailLiked,proto3" json:"email_liked,omitempty"`                                                           // いいね通知
	EmailCommented               bool   `protobuf:"varint,19,opt,name=email_commented,json=emailCommented,proto3" json:"email_commented,omitempty"`                                               // コメント通知
	EmailChated                  bool   `protobuf:"varint,20,opt,name=email_chated,json=emailChated,proto3" json:"email_chated,omitempty"`                                                        // チャット通知
	EmailLikingContentDiscounted bool   `protobuf:"varint,21,opt,name=email_liking_content_discounted,json=emailLikingContentDiscounted,proto3" json:"email_liking_content_discounted,omitempty"` // いいねした商品が割引通知
	EmailLikingContentCommented  bool   `protobuf:"varint,22,opt,name=email_liking_content_commented,json=emailLikingContentCommented,proto3" json:"email_liking_content_commented,omitempty"`    // いいねした商品が割引通知
	EmailFollowingUserNew        bool   `protobuf:"varint,23,opt,name=email_following_user_new,json=emailFollowingUserNew,proto3" json:"email_following_user_new,omitempty"`                      // フォローしたユーザーが新規投稿通知
	EmailNews                    bool   `protobuf:"varint,24,opt,name=email_news,json=emailNews,proto3" json:"email_news,omitempty"`                                                              // ニュース通知
	EmailEvent                   bool   `protobuf:"varint,25,opt,name=email_event,json=emailEvent,proto3" json:"email_event,omitempty"`                                                           // イベント通知
	EmailCoupon                  bool   `protobuf:"varint,26,opt,name=email_coupon,json=emailCoupon,proto3" json:"email_coupon,omitempty"`                                                        // クーポン通知
	EmailUpdate                  bool   `protobuf:"varint,27,opt,name=email_update,json=emailUpdate,proto3" json:"email_update,omitempty"`                                                        // アップデート通知
}

func (x *NotificationSetting) Reset() {
	*x = NotificationSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSetting) ProtoMessage() {}

func (x *NotificationSetting) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSetting.ProtoReflect.Descriptor instead.
func (*NotificationSetting) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationSetting) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotificationSetting) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NotificationSetting) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NotificationSetting) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *NotificationSetting) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *NotificationSetting) GetFollowed() bool {
	if x != nil {
		return x.Followed
	}
	return false
}

func (x *NotificationSetting) GetLiked() bool {
	if x != nil {
		return x.Liked
	}
	return false
}

func (x *NotificationSetting) GetCommented() bool {
	if x != nil {
		return x.Commented
	}
	return false
}

func (x *NotificationSetting) GetChated() bool {
	if x != nil {
		return x.Chated
	}
	return false
}

func (x *NotificationSetting) GetLikingContentDiscounted() bool {
	if x != nil {
		return x.LikingContentDiscounted
	}
	return false
}

func (x *NotificationSetting) GetLikingContentCommented() bool {
	if x != nil {
		return x.LikingContentCommented
	}
	return false
}

func (x *NotificationSetting) GetFollowingUserNew() bool {
	if x != nil {
		return x.FollowingUserNew
	}
	return false
}

func (x *NotificationSetting) GetNews() bool {
	if x != nil {
		return x.News
	}
	return false
}

func (x *NotificationSetting) GetEvent() bool {
	if x != nil {
		return x.Event
	}
	return false
}

func (x *NotificationSetting) GetCoupon() bool {
	if x != nil {
		return x.Coupon
	}
	return false
}

func (x *NotificationSetting) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

func (x *NotificationSetting) GetEmailFollowed() bool {
	if x != nil {
		return x.EmailFollowed
	}
	return false
}

func (x *NotificationSetting) GetEmailLiked() bool {
	if x != nil {
		return x.EmailLiked
	}
	return false
}

func (x *NotificationSetting) GetEmailCommented() bool {
	if x != nil {
		return x.EmailCommented
	}
	return false
}

func (x *NotificationSetting) GetEmailChated() bool {
	if x != nil {
		return x.EmailChated
	}
	return false
}

func (x *NotificationSetting) GetEmailLikingContentDiscounted() bool {
	if x != nil {
		return x.EmailLikingContentDiscounted
	}
	return false
}

func (x *NotificationSetting) GetEmailLikingContentCommented() bool {
	if x != nil {
		return x.EmailLikingContentCommented
	}
	return false
}

func (x *NotificationSetting) GetEmailFollowingUserNew() bool {
	if x != nil {
		return x.EmailFollowingUserNew
	}
	return false
}

func (x *NotificationSetting) GetEmailNews() bool {
	if x != nil {
		return x.EmailNews
	}
	return false
}

func (x *NotificationSetting) GetEmailEvent() bool {
	if x != nil {
		return x.EmailEvent
	}
	return false
}

func (x *NotificationSetting) GetEmailCoupon() bool {
	if x != nil {
		return x.EmailCoupon
	}
	return false
}

func (x *NotificationSetting) GetEmailUpdate() bool {
	if x != nil {
		return x.EmailUpdate
	}
	return false
}

type NotificationSettingList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification []*NotificationSetting `protobuf:"bytes,1,rep,name=notification,proto3" json:"notification,omitempty"`
}

func (x *NotificationSettingList) Reset() {
	*x = NotificationSettingList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingList) ProtoMessage() {}

func (x *NotificationSettingList) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingList.ProtoReflect.Descriptor instead.
func (*NotificationSettingList) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationSettingList) GetNotification() []*NotificationSetting {
	if x != nil {
		return x.Notification
	}
	return nil
}

// request
type NotificationSettingIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NotificationSettingIdRequest) Reset() {
	*x = NotificationSettingIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingIdRequest) ProtoMessage() {}

func (x *NotificationSettingIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingIdRequest.ProtoReflect.Descriptor instead.
func (*NotificationSettingIdRequest) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationSettingIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NotificationSettingIdListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *NotificationSettingIdListRequest) Reset() {
	*x = NotificationSettingIdListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingIdListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingIdListRequest) ProtoMessage() {}

func (x *NotificationSettingIdListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingIdListRequest.ProtoReflect.Descriptor instead.
func (*NotificationSettingIdListRequest) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{3}
}

func (x *NotificationSettingIdListRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type NotificationSettingUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *NotificationSettingUserIdRequest) Reset() {
	*x = NotificationSettingUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingUserIdRequest) ProtoMessage() {}

func (x *NotificationSettingUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingUserIdRequest.ProtoReflect.Descriptor instead.
func (*NotificationSettingUserIdRequest) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{4}
}

func (x *NotificationSettingUserIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type NotificationSettingContentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentId int64 `protobuf:"varint,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
}

func (x *NotificationSettingContentIdRequest) Reset() {
	*x = NotificationSettingContentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingContentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingContentIdRequest) ProtoMessage() {}

func (x *NotificationSettingContentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingContentIdRequest.ProtoReflect.Descriptor instead.
func (*NotificationSettingContentIdRequest) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationSettingContentIdRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

type NotificationSettingUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *NotificationSettingUuidRequest) Reset() {
	*x = NotificationSettingUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingUuidRequest) ProtoMessage() {}

func (x *NotificationSettingUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingUuidRequest.ProtoReflect.Descriptor instead.
func (*NotificationSettingUuidRequest) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{6}
}

func (x *NotificationSettingUuidRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type NotificationSettingUserIdAndContentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ContentId int64 `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
}

func (x *NotificationSettingUserIdAndContentIdRequest) Reset() {
	*x = NotificationSettingUserIdAndContentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingUserIdAndContentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingUserIdAndContentIdRequest) ProtoMessage() {}

func (x *NotificationSettingUserIdAndContentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingUserIdAndContentIdRequest.ProtoReflect.Descriptor instead.
func (*NotificationSettingUserIdAndContentIdRequest) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{7}
}

func (x *NotificationSettingUserIdAndContentIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NotificationSettingUserIdAndContentIdRequest) GetContentId() int64 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

// response
type NotificationSettingBoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NotificationSettingBoolResponse) Reset() {
	*x = NotificationSettingBoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notification_setting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSettingBoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSettingBoolResponse) ProtoMessage() {}

func (x *NotificationSettingBoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_setting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSettingBoolResponse.ProtoReflect.Descriptor instead.
func (*NotificationSettingBoolResponse) Descriptor() ([]byte, []int) {
	return file_notification_setting_proto_rawDescGZIP(), []int{8}
}

func (x *NotificationSettingBoolResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

var File_notification_setting_proto protoreflect.FileDescriptor

var file_notification_setting_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd5, 0x07, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x6c, 0x69,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6c,
	0x69, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x69, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6c, 0x69, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x65, 0x77, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65,
	0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x1f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x1e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x4c, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x65, 0x77, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65,
	0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x65, 0x77, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x68, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2e, 0x0a, 0x1c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x32, 0x0a, 0x20, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x20, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x44, 0x0a, 0x23, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x1e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x66,
	0x0a, 0x2c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32,
	0x80, 0x07, 0x0a, 0x1a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x60,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x00,
	0x12, 0x6c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x35, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x32, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x34,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x00, 0x12, 0x70, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x36,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d,
	0x67, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notification_setting_proto_rawDescOnce sync.Once
	file_notification_setting_proto_rawDescData = file_notification_setting_proto_rawDesc
)

func file_notification_setting_proto_rawDescGZIP() []byte {
	file_notification_setting_proto_rawDescOnce.Do(func() {
		file_notification_setting_proto_rawDescData = protoimpl.X.CompressGZIP(file_notification_setting_proto_rawDescData)
	})
	return file_notification_setting_proto_rawDescData
}

var file_notification_setting_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_notification_setting_proto_goTypes = []interface{}{
	(*NotificationSetting)(nil),                          // 0: notification_setting.NotificationSetting
	(*NotificationSettingList)(nil),                      // 1: notification_setting.NotificationSettingList
	(*NotificationSettingIdRequest)(nil),                 // 2: notification_setting.NotificationSettingIdRequest
	(*NotificationSettingIdListRequest)(nil),             // 3: notification_setting.NotificationSettingIdListRequest
	(*NotificationSettingUserIdRequest)(nil),             // 4: notification_setting.NotificationSettingUserIdRequest
	(*NotificationSettingContentIdRequest)(nil),          // 5: notification_setting.NotificationSettingContentIdRequest
	(*NotificationSettingUuidRequest)(nil),               // 6: notification_setting.NotificationSettingUuidRequest
	(*NotificationSettingUserIdAndContentIdRequest)(nil), // 7: notification_setting.NotificationSettingUserIdAndContentIdRequest
	(*NotificationSettingBoolResponse)(nil),              // 8: notification_setting.NotificationSettingBoolResponse
	(*emptypb.Empty)(nil),                                // 9: google.protobuf.Empty
}
var file_notification_setting_proto_depIdxs = []int32{
	0, // 0: notification_setting.NotificationSettingList.notification:type_name -> notification_setting.NotificationSetting
	0, // 1: notification_setting.NotificationSettingService.Create:input_type -> notification_setting.NotificationSetting
	0, // 2: notification_setting.NotificationSettingService.Update:input_type -> notification_setting.NotificationSetting
	2, // 3: notification_setting.NotificationSettingService.Delete:input_type -> notification_setting.NotificationSettingIdRequest
	2, // 4: notification_setting.NotificationSettingService.GetById:input_type -> notification_setting.NotificationSettingIdRequest
	6, // 5: notification_setting.NotificationSettingService.GetByUuid:input_type -> notification_setting.NotificationSettingUuidRequest
	4, // 6: notification_setting.NotificationSettingService.GetByUser:input_type -> notification_setting.NotificationSettingUserIdRequest
	3, // 7: notification_setting.NotificationSettingService.GetListByIdList:input_type -> notification_setting.NotificationSettingIdListRequest
	9, // 8: notification_setting.NotificationSettingService.GetAll:input_type -> google.protobuf.Empty
	0, // 9: notification_setting.NotificationSettingService.Create:output_type -> notification_setting.NotificationSetting
	8, // 10: notification_setting.NotificationSettingService.Update:output_type -> notification_setting.NotificationSettingBoolResponse
	8, // 11: notification_setting.NotificationSettingService.Delete:output_type -> notification_setting.NotificationSettingBoolResponse
	0, // 12: notification_setting.NotificationSettingService.GetById:output_type -> notification_setting.NotificationSetting
	0, // 13: notification_setting.NotificationSettingService.GetByUuid:output_type -> notification_setting.NotificationSetting
	0, // 14: notification_setting.NotificationSettingService.GetByUser:output_type -> notification_setting.NotificationSetting
	1, // 15: notification_setting.NotificationSettingService.GetListByIdList:output_type -> notification_setting.NotificationSettingList
	1, // 16: notification_setting.NotificationSettingService.GetAll:output_type -> notification_setting.NotificationSettingList
	9, // [9:17] is the sub-list for method output_type
	1, // [1:9] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_notification_setting_proto_init() }
func file_notification_setting_proto_init() {
	if File_notification_setting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notification_setting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingIdListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingContentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingUserIdAndContentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notification_setting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationSettingBoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notification_setting_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_setting_proto_goTypes,
		DependencyIndexes: file_notification_setting_proto_depIdxs,
		MessageInfos:      file_notification_setting_proto_msgTypes,
	}.Build()
	File_notification_setting_proto = out.File
	file_notification_setting_proto_rawDesc = nil
	file_notification_setting_proto_goTypes = nil
	file_notification_setting_proto_depIdxs = nil
}
